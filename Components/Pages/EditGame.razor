@page "/editgame"
@page "/editgame/{id:int}"

@inject NavigationManager NavigationManager
@inject GamesClient GamesClient
@inject IGenresClient GenresClient

<PageTitle>@title</PageTitle>

<h3>@title</h3>

@if (genres is null || game is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm Model="@game" FormName="editGame" OnValidSubmit="HandleSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="mb-3">
                    <label for="name" class="form-label">Name:</label>
                    <InputText id="name" @bind-Value="game.Name" class="form-control" />
                </div>
                <ValidationMessage For="() => game.Name"></ValidationMessage>
                <div class="mb-3">
                    <label for="genre" class="form-label">Genre:</label>
                    <InputSelect id="genre" @bind-Value="game.GenreId" class="form-select">
                        <option value="">Select a Genre</option>
                        @foreach (var genre in genres)
                        {
                            <option value="@genre.Id">@genre.Name</option>
                        }
                    </InputSelect>
                </div>
                <ValidationMessage For="() => game.GenreId"></ValidationMessage>
                <div class="mb-3">
                    <label for="price" class="form-label">Price:</label>
                    <InputNumber id="price" @bind-Value="game.Price" class="form-control" />
                </div>
                <ValidationMessage For="() => game.Price"></ValidationMessage>
                <div class="mb-3">
                    <label for="releaseDate" class="form-label">Release Date:</label>
                    <InputDate id="releaseDate" @bind-Value="game.ReleaseDate" class="form-control" />
                </div>
                <button class="btn btn-primary">Save</button>
                <a class="btn btn-secondary" role="button" href="/">Cancel</a>
            </EditForm>
        </div>
    </div>
}
@code {
    [Parameter]
    public int? Id { get; set; }
    [SupplyParameterFromForm]
    private GameDetails? game { get; set; }

    private Genre[]? genres;
    private string title = string.Empty;
    protected override void OnInitialized()
    {
        genres = GenresClient.GetGenres();
    }

    protected override void OnParametersSet()
    {
        if (game is not null) return;

        if (Id is not null)
        {
            game = GamesClient.GetGame(Id.Value);
            title = $"Edit {game.Name}";
        }
        else
        {
            game = new()
            {
                Name = string.Empty,
                ReleaseDate = DateOnly.FromDateTime(DateTime.UtcNow)
            };

            title = "New Game";
        }
    }
    private void HandleSubmit()
    {
        ArgumentNullException.ThrowIfNull(game);

        if (Id is null)
        {
            GamesClient.AddGame(game);
        }
        else
        {
            game.Id = Id.Value;
            GamesClient.UpdateGame(game);
        }

        NavigationManager.NavigateTo("/");
    }

}
